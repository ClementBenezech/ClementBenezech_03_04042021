@font-face {
  font-family: "Roboto";
  src: url(../../public/font/Roboto-Regular.ttf);
}
@font-face {
  font-family: "Roboto-Bold";
  src: url(../../public/font/Roboto-Bold.ttf);
}
@font-face {
  font-family: "Roboto-Thin";
  src: url(../../public/font/Roboto-Thin.ttf);
}
@font-face {
  font-family: "Shrikhand";
  src: url(../../public/font/Shrikhand-Regular.ttf);
}
* {
  box-sizing: border-box;
}

button {
  text-decoration: none;
  outline: none;
  border: none;
}

a {
  text-decoration: none;
}

body {
  font-family: "Roboto", sans-serif;
  color: black;
  font-size: 4vw;
}

h1,
footer > h2 {
  font-family: "Shrikhand", sans-serif;
  font-weight: 900;
  font-size: 10vw;
  margin: 0px;
}

h2 {
  margin: 0px;
}

.btn-explore {
  background: linear-gradient(180deg, #ff79da, #9356dc);
  padding: 4vw;
  /*this will ensure vertical alignment of the h2 title in the middle of the container, and also harmonious side padding*/
  font-size: 4vw;
  border-radius: 8vw;
  color: white;
  margin-top: 4vw;
  width: max-content;
  box-shadow: 0 1vw 0.5vw 0.5vw #ececec;
}
.btn-explore:hover {
  background: linear-gradient(180deg, #ff79da, #a16be0);
  box-shadow: 0 1vw 0.5vw 0.5vw #e7e7e7;
}

.container-locale {
  display: flex;
  justify-content: center;
  width: 100vw;
  width: 100%;
  /*Linking the locale-container background color with the main background color, given the fact that it is a different shade of the same color
  (well, if you consider grey to be a color) If we were to change the value of background color to adopt a new theme, 
  only one value would have to be changed in the _variable.scss file. Alternatively, I could also have created another color derived from this one 
  in the _variables.scss file, something like $locale-background color : darken(background-color-primary, 10%).
  EDIT: Rather than trying to implement an inset box-shadow css trick to have the top shadow, I defined the background of the section as a linear gradient
  The gradient starts back on top (default, adding a 'deg' value could statrt it from the side or bottom -note for later-), then after 10% of the height,
  it displays the base background color, still darkened to adresss the specific looks of this box */
  background: linear-gradient(rgba(0, 0, 0, 0.5) 0%, #e0e0e0 5%);
}
.container-locale h2,
.container-locale i {
  margin: 4vw 4vw 4vw 0px;
  /*this will ensure vertical alignment of the h2 title in the middle of the container*/
  font-size: 4vw;
}

.container-explore {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  padding: 8vw 8vw 8vw 8vw;
  background-color: #f9f9f9;
}
.container-explore h2 {
  font-size: 6vw;
  font-family: "Roboto-Bold";
}
.container-explore p {
  font-size: 4vw;
  font-family: "Roboto-Thin";
}

.container-how-to-use {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  padding: 8vw 8vw 8vw 8vw;
  width: 100vw;
}
.container-how-to-use__step-container {
  display: flex;
  justify-content: center;
  width: 100vw;
  width: 100%;
  /*padding: $font-size-regular * 2 $font-size-regular $font-size-regular * 2 -10vw;*/
  margin-top: 8vw;
  border-radius: 4vw;
}
.container-how-to-use__step-number {
  flex: 7.2vw;
  margin: auto;
  height: 6vw;
  line-height: 6vw;
  background-color: #9356dc;
  border-radius: 4vw;
  z-index: 50;
  color: white;
}
.container-how-to-use__step-content {
  flex: 1fr;
  background-color: #f9f9f9;
  margin-left: -3vw;
  border-radius: 4vw;
  color: #adadad;
  box-shadow: 0 0.5vw 0.5vw #adadad;
  display: flex;
  justify-content: start;
  width: 100vw;
  padding-left: 8vw;
}
@keyframes step-content-color {
  to {
    color: #9356dc;
    background-color: #ffdff6;
  }
}
.container-how-to-use__step-content:hover {
  animation: step-content-color 0.7s forwards;
}
.container-how-to-use__step-content:hover i {
  animation: step-content-color 0.7s forwards;
}
.container-how-to-use__step-content p {
  color: black;
  font-weight: bold;
}
.container-how-to-use h2 {
  display: flex;
  align-self: flex-start;
  font-family: "Roboto-Bold";
}
.container-how-to-use i {
  margin: 4vw 4vw 4vw 0px;
  /*this will ensure vertical alignment of the h2 title in the middle of the container*/
  font-size: 4vw;
  color: #adadad;
}

.container-result-list {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  padding: 8vw 8vw 8vw 8vw;
  width: 100vw;
  background-color: #f9f9f9;
}
.container-result-list__result-container {
  position: relative;
  /*to enable absolute positionning of the favorite and new elements*/
  display: flex;
  flex-direction: column;
  margin: 4vw;
}
.container-result-list__result-img {
  object-fit: cover;
  width: 90vw;
  height: 50vw;
  border-radius: 8vw 8vw 0px 0px;
}
.container-result-list__result-labels-container {
  width: 90vw;
  height: 20vw;
  border-radius: 0px 0px 8vw 8vw;
  display: flex;
  flex-direction: column;
  text-align: start;
  padding-left: 4vw;
  padding-top: 4vw;
  background-color: white;
  box-shadow: 0 0.5vw 0.5vw #adadad;
}
.container-result-list__result-name {
  font-weight: bold;
  height: 25%;
  margin-bottom: 2vw;
}
.container-result-list__result-location {
  height: 25%;
}
.container-result-list__favorite {
  position: absolute;
  top: 57vw;
  right: 5vw;
  z-index: 50;
  color: black;
  font-size: 6vw;
}
.container-result-list h2 {
  display: flex;
  align-self: flex-start;
  font-family: "Roboto-Bold";
}
.container-result-list p {
  font-size: 4vw;
  font-family: "Roboto-Thin";
}

.footer {
  background-color: #2d2d2d;
  padding: 8vw;
  width: 100%;
}
.footer * {
  color: white;
}
.footer h2 {
  font-size: 4.8vw;
}
.footer__link-container {
  display: flex;
  width: 100%;
  padding-top: 3.2vw;
}
.footer i {
  width: 8vw;
}

/*Here we handle the spin loader behavio(u)r:
i've used two classes so far, 
- .loadScreen being printed on top of everything and using up all the space available in the viewport.btn-explore
- .loader-container is the style of the div containing the spinloader, using a square of 20% of the available width in the viewport.

The loadscreen disappears after 3 seconds on a short fade out effect obtained by manipulating opacity, revealing the homepage*/
@keyframes hide-load-screen {
  0% {
    width: 100%;
    height: 100%;
    visibility: visible;
    opacity: 1;
  }
  100% {
    visibility: hidden;
    opacity: 0;
  }
}
.load-screen {
  /*display: flex;*/
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: #f9f9f9;
  z-index: 99;
  animation: hide-load-screen;
  animation-delay: 2s;
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  80% {
    opacity: 1;
  }
  100% {
    transform: rotate(360deg);
    opacity: 0;
  }
}
.loader-spinner {
  position: absolute;
  box-sizing: content-box;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  margin-top: 36vh;
  margin-bottom: auto;
  border-top: 2vh solid #ff79da;
  border-bottom: 2vh solid #99e2d0;
  border-left: 2vh solid white;
  border-right: 2vh solid white;
  animation: spin 2s ease-in-out;
  animation-fill-mode: forwards;
  border-radius: 50%;
  width: 20vh;
  height: 20vh;
}

@keyframes fade-in-rotate {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
    transform: rotate(0deg);
  }
  100% {
    opacity: 0.5;
    transform: rotate(360deg);
  }
}
.loader-label {
  position: absolute;
  box-sizing: content-box;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  margin-top: 36vh;
  margin-bottom: auto;
  display: flex;
  border-radius: 50%;
  border: 2vh solid transparent;
  width: 20vh;
  height: 20vh;
  font-family: "Shrikhand", sans-serif;
  font-weight: 900;
  font-size: 3vh;
  background-color: transparent;
}
.loader-label p {
  margin: auto;
  opacity: 0;
  animation: fade-in-rotate 2.2s;
  animation-fill-mode: forwards;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.homepage-main-content {
  opacity: 0;
  overflow: hidden;
  animation: fade-in;
  animation-delay: 2.5s;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  box-sizing: border-box;
}

/*# sourceMappingURL=style.css.map */
